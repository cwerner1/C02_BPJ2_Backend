package com.flattery;

import com.flattery.models.Wohnung;
import com.flattery.repositories.WohnungRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.Optional;

@Controller    // This means that this class is a Controller
@RequestMapping(path = "/wohnung") // This means URL's start with /demo (after Application path)

public class WohnungController extends BaseController{
    // Which is auto-generated by Spring, we will use it to handle the data
    @Autowired
    WohnungRepository wohnungRepository;

    public WohnungController(WohnungRepository wohnungRepository2) {
        this.wohnungRepository = wohnungRepository2;
    }

    @GetMapping(path = "/add") // Map ONLY GET Requests
    public @ResponseBody
    String addNewUser(@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Wohnung n = new Wohnung();
        n.setAddress(name);
        n.setCountry(email);
        wohnungRepository.save(n);
        return "Saved";
    }

    @GetMapping(path = "/all")
    public @ResponseBody
    Iterable<Wohnung> getAllUsers() {
        // This returns a JSON or XML with the users
        return wohnungRepository.findAll();
    }

    @GetMapping(path = "/get/{id}")
    public @ResponseBody
    String addNewUser(@RequestParam Integer id) {


        Optional<Wohnung> wohnung = wohnungRepository.findById(id);

        this.setData(wohnung);
        return this.getResponse();

    }
}
